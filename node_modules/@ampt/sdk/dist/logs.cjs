"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// logs/index.ts
var logs_exports = {};
__export(logs_exports, {
  logs: () => logs
});
module.exports = __toCommonJS(logs_exports);
var import_assert = __toESM(require("assert"), 1);
var multiples = {
  day: 1,
  days: 1,
  week: 7,
  weeks: 7,
  year: 365
};
var defaultRetention = 7;
var customRetention;
var logs = {
  get retention() {
    return customRetention || defaultRetention;
  },
  retain(quantity, unit = "days") {
    const num = Number(quantity);
    (0, import_assert.default)(Number.isFinite(num), "logs retention must be a finite number");
    (0, import_assert.default)(unit in multiples, 'logs retention unit must be "days" or "weeks"');
    customRetention = num * multiples[unit];
    (0, import_assert.default)(customRetention >= 1, "logs retention minimum is 1 day");
    (0, import_assert.default)(customRetention <= 365, "logs retention maximum is 1 year");
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  logs
});
